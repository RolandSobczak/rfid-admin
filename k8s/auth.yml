apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-config
  namespace: "%NAMESPACE%"
data:
  SETTINGS_PATH: "auth.settings.base.Settings"
  PUBLIC_KEY: |
    -----BEGIN PUBLIC KEY-----
    MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA41Z9WXaplX+o5Szxf2pV
    2o7/dXDNwFoM7LJAdNno1pYYZUtph/5ickj3Pv6/MHmDIAg3bDmgKZyNC+mER7uz
    +J0jakNkKSjEbpNcDxq1WHBYBoGRZD2JNVpnTMimgCPpyl5tESFHHi1ro6Yw2F3G
    w2FWqK0EEoZLueGsSqizK1aIJM8ChJHoIcG5SZLy/QCBE1jlxUGkW4Ndho87TGWk
    JHXx+iP2+Y0bBHkBjE8WkhZovRxtbv3nO5kL6eTgzyRlsZ7VttKkng7XGmwQr5aw
    ZRE9L5HIvn5mznImBfS2SvTFaygs2E09SmbOAniQdqbxLgozBhaoeqXWyQgDmjX9
    xOlxbW7vHqOniGLXtSLeKY10brA6wMe4tq7v+x311a/IMKZpjuk6DwG4QnLFQnDc
    6WXZRwAZtSsheXpo5gykKGE+D1SA4P5enyMQLy2P65h+8PhhFdtEJFVt8go9LWf1
    mAQxZfSFdWXV+k4S2f8nwZifSjTCZGTocbHU6pPrnb8bphbK0HsVjSyFXL8EmkKm
    O8J8uPhWf1THpMv1gWUz1Fs0IJeKOde65yg6227o8wRrNaCTwOt476HLS4WEVpAU
    J3q8VzXSPIoQ4k0vDW6kkJuNtxr1tjX2rtBJjqFOFGGh3QcNuEPaZ0KNdvNCEzz7
    AGLRfWE6vgyE05eV7ie874ECAwEAAQ==
    -----END PUBLIC KEY-----
  PRIVATE_KEY: |
    -----BEGIN PRIVATE KEY-----
    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
    CvQu4ZafupflbkEMwqy+BJPdgLBz7g==
    -----END PRIVATE KEY-----
  ACCESS_TOKEN_EXPIRE_SECONDS: "3600"
  ACTIVATE_TOKEN_EXPIRE_SECONDS: "1800"
  REFRESH_TOKEN_EXPIRE_SECONDS: "2678400"
  PASSWORD_RESET_TOKEN_EXPIRE_SECONDS: "3600"
  LONG_TERM_TOKEN_EXPIRE_DAYS: "365"

  # ENV
  ENV_TYPE: dev

  # Logging
  LOG_LEVEL: DEBUG

  # CONFIRMATION
  CONFIRMATION_URL: "https://frontend/confirm/{{ token }}/"

  # RESET PASSWORD
  RESET_PASSWORD_URL: "https://frontend/reset/{{ token }}/"

  ## BLOB STORAGE
  BLOB_STORAGE_PROVIDER: BOTO
  BLOB_STORAGE_HOST: http://minio:9000
  BLOB_STORAGE_ACCESS_KEY: wmudSJj798gaatLLtRyY
  BLOB_STORAGE_SECRET_KEY: qsSSVu5vkTuxiq1ut6XW7KsmRWonUxhQxKgQwEcH
  BLOB_STORAGE_EXPIRE_SECONDS: "3600"
  BLOB_STORAGE_SHARING_HOST: http://localhost:9000

  # MAIL
  EMAIL_HOST: sandbox.smtp.mailtrap.io
  EMAIL_FROM: admin@rfidio.it
  EMAIL_PORT: "2525"
  EMAIL_USER: YOU-HAVE-TO-CHANGE-THIS
  EMAIL_PASSWORD: YOU-HAVE-TO-CHANGE-THIS

  # POSTGRES
  POSTGRES_HOST: db
  POSTGRES_PORT: "5432"
  POSTGRES_DB: auth

  # CORS
  ALLOWED_ORIGINS: "*"
  ALLOW_CREDENTIALS: "True"
  ALLOWED_METHODS: "*"
  ALLOWED_HEADERS: "*"

  # PATH
  ROOT_PATH: /auth-api

  RABBIT_HOST: mq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: auth
  name: auth
  namespace: "%NAMESPACE%"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: auth
    spec:
      containers:
        - image: localhost:32000/rfidio-auth:latest
          imagePullPolicy: Always
          name: auth
          resources: {}
          ports:
            - name: "http"
              containerPort: 8000
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: POSTGRES_PASSWORD
            - name: RABBIT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbit
                  key: RABBIT_USER
            - name: RABBIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbit
                  key: RABBIT_PASSWORD
          envFrom:
            - configMapRef:
                name: auth-config
          livenessProbe:
            httpGet:
              path: /healthy
              port: http
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /healthy
              port: http
            failureThreshold: 4
            periodSeconds: 30
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: auth
  name: auth
  namespace: "%NAMESPACE%"
spec:
  ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: auth
  type: LoadBalancer
status:
  loadBalancer: {}
