apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rfid-db
  namespace: "%NAMESPACE%"
spec:
  volumeName: "%VOLUME_NAME%"
  storageClassName: "%STORAGE_CLASS%"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "%STORAGE_SIZE%"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: postgres
  name: postgres
  namespace: "%NAMESPACE%"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: rfid-db
      containers:
        - image: postgres:%PG_VERSION%
          name: postgres
          resources: {}
          env:
            - name: POSTGRES_DB
              value: "auth"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: POSTGRES_PASSWORD
          volumeMounts:
          - name: db-data
            mountPath: "/var/lib/postgresql/data"
          ports:
            - containerPort: 5432
          livenessProbe:
            exec:
              command:
              - "sh"
              - "-c"
              - "PGPASSWORD=$$POSTGRES_PASSWORD psql -U $$POSTGRES_USER -h 127.0.0.1"
            initialDelaySeconds: 20
            failureThreshold: 6
            periodSeconds: 10
          startupProbe:
            exec:
              command:
              - "sh"
              - "-c"
              - "PGPASSWORD=$$POSTGRES_PASSWORD psql -U $$POSTGRES_USER -h 127.0.0.1"
            initialDelaySeconds: 20
            failureThreshold: 6
            periodSeconds: 10
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres
  name: db
  namespace: "%NAMESPACE%"
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgres
  name: db-np
  namespace: "%NAMESPACE%"
spec:
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
  type: NodePort
status:
  loadBalancer: {}
